Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    EOL

Grammar

Rule 0     S' -> program
Rule 1     program -> funcs
Rule 2     funcs -> func funcs
Rule 3     funcs -> <empty>
Rule 4     func -> FUNC IDENT OP params CP OB bodies CB
Rule 5     bodies -> body
Rule 6     params -> IDENT params
Rule 7     params -> IDENT COMMA params
Rule 8     params -> <empty>
Rule 9     body -> IDENT OP CP bodies
Rule 10    body -> IDENT OP params CP bodies
Rule 11    body -> <empty>

Terminals, with rules where they appear

CB                   : 4
COMMA                : 7
COMMENT              : 
CP                   : 4 9 10
EOL                  : 
FUNC                 : 4
IDENT                : 4 6 7 9 10
OB                   : 4
OP                   : 4 9 10
error                : 

Nonterminals, with rules where they appear

bodies               : 4 9 10
body                 : 5
func                 : 2
funcs                : 1 2
params               : 4 6 7 10
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcs
    (2) funcs -> . func funcs
    (3) funcs -> .
    (4) func -> . FUNC IDENT OP params CP OB bodies CB

    $end            reduce using rule 3 (funcs -> .)
    FUNC            shift and go to state 4

    program                        shift and go to state 1
    funcs                          shift and go to state 2
    func                           shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> funcs .

    $end            reduce using rule 1 (program -> funcs .)


state 3

    (2) funcs -> func . funcs
    (2) funcs -> . func funcs
    (3) funcs -> .
    (4) func -> . FUNC IDENT OP params CP OB bodies CB

    $end            reduce using rule 3 (funcs -> .)
    FUNC            shift and go to state 4

    func                           shift and go to state 3
    funcs                          shift and go to state 5

state 4

    (4) func -> FUNC . IDENT OP params CP OB bodies CB

    IDENT           shift and go to state 6


state 5

    (2) funcs -> func funcs .

    $end            reduce using rule 2 (funcs -> func funcs .)


state 6

    (4) func -> FUNC IDENT . OP params CP OB bodies CB

    OP              shift and go to state 7


state 7

    (4) func -> FUNC IDENT OP . params CP OB bodies CB
    (6) params -> . IDENT params
    (7) params -> . IDENT COMMA params
    (8) params -> .

    IDENT           shift and go to state 8
    CP              reduce using rule 8 (params -> .)

    params                         shift and go to state 9

state 8

    (6) params -> IDENT . params
    (7) params -> IDENT . COMMA params
    (6) params -> . IDENT params
    (7) params -> . IDENT COMMA params
    (8) params -> .

    COMMA           shift and go to state 11
    IDENT           shift and go to state 8
    CP              reduce using rule 8 (params -> .)

    params                         shift and go to state 10

state 9

    (4) func -> FUNC IDENT OP params . CP OB bodies CB

    CP              shift and go to state 12


state 10

    (6) params -> IDENT params .

    CP              reduce using rule 6 (params -> IDENT params .)


state 11

    (7) params -> IDENT COMMA . params
    (6) params -> . IDENT params
    (7) params -> . IDENT COMMA params
    (8) params -> .

    IDENT           shift and go to state 8
    CP              reduce using rule 8 (params -> .)

    params                         shift and go to state 13

state 12

    (4) func -> FUNC IDENT OP params CP . OB bodies CB

    OB              shift and go to state 14


state 13

    (7) params -> IDENT COMMA params .

    CP              reduce using rule 7 (params -> IDENT COMMA params .)


state 14

    (4) func -> FUNC IDENT OP params CP OB . bodies CB
    (5) bodies -> . body
    (9) body -> . IDENT OP CP bodies
    (10) body -> . IDENT OP params CP bodies
    (11) body -> .

    IDENT           shift and go to state 15
    CB              reduce using rule 11 (body -> .)

    bodies                         shift and go to state 16
    body                           shift and go to state 17

state 15

    (9) body -> IDENT . OP CP bodies
    (10) body -> IDENT . OP params CP bodies

    OP              shift and go to state 18


state 16

    (4) func -> FUNC IDENT OP params CP OB bodies . CB

    CB              shift and go to state 19


state 17

    (5) bodies -> body .

    CB              reduce using rule 5 (bodies -> body .)


state 18

    (9) body -> IDENT OP . CP bodies
    (10) body -> IDENT OP . params CP bodies
    (6) params -> . IDENT params
    (7) params -> . IDENT COMMA params
    (8) params -> .

  ! shift/reduce conflict for CP resolved as shift
    CP              shift and go to state 20
    IDENT           shift and go to state 8

  ! CP              [ reduce using rule 8 (params -> .) ]

    params                         shift and go to state 21

state 19

    (4) func -> FUNC IDENT OP params CP OB bodies CB .

    FUNC            reduce using rule 4 (func -> FUNC IDENT OP params CP OB bodies CB .)
    $end            reduce using rule 4 (func -> FUNC IDENT OP params CP OB bodies CB .)


state 20

    (9) body -> IDENT OP CP . bodies
    (5) bodies -> . body
    (9) body -> . IDENT OP CP bodies
    (10) body -> . IDENT OP params CP bodies
    (11) body -> .

    IDENT           shift and go to state 15
    CB              reduce using rule 11 (body -> .)

    bodies                         shift and go to state 22
    body                           shift and go to state 17

state 21

    (10) body -> IDENT OP params . CP bodies

    CP              shift and go to state 23


state 22

    (9) body -> IDENT OP CP bodies .

    CB              reduce using rule 9 (body -> IDENT OP CP bodies .)


state 23

    (10) body -> IDENT OP params CP . bodies
    (5) bodies -> . body
    (9) body -> . IDENT OP CP bodies
    (10) body -> . IDENT OP params CP bodies
    (11) body -> .

    IDENT           shift and go to state 15
    CB              reduce using rule 11 (body -> .)

    bodies                         shift and go to state 24
    body                           shift and go to state 17

state 24

    (10) body -> IDENT OP params CP bodies .

    CB              reduce using rule 10 (body -> IDENT OP params CP bodies .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CP in state 18 resolved as shift
